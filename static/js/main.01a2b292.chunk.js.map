{"version":3,"sources":["types/FilterBy.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","selectTodo","selectedTodo","className","map","todo","id","completed","title","type","onClick","classNames","TodoFilter","query","onChangeFilter","onChangeQuery","onChange","e","target","value","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","useEffect","userId","href","email","name","App","visibleTodos","setVisibleTodos","setSelectedTodo","setQuery","filterBy","setFilterBy","filterTodos","useMemo","filteredToods","filter","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01a2b292.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectTodo: (todo: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            {todo.completed\n              ? <p className=\"has-text-success\">{todo.title}</p>\n              : <p className=\"has-text-danger\">{todo.title}</p>}\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => selectTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={classNames('far',\n                  { 'fa-eye-slash': selectedTodo === todo },\n                  { 'fa-eye': selectedTodo !== todo })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { Filter } from '../../types/FilterBy';\n\ntype Props = {\n  query: string,\n  onChangeFilter: (filterBy: Filter) => void,\n  onChangeQuery: (query: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onChangeFilter,\n  onChangeQuery,\n}) => {\n  const handleFilterChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    onChangeFilter(e.target.value as Filter);\n  };\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onChangeQuery(e.target.value);\n  };\n\n  const handleDeleteSearch = () => {\n    if (query) {\n      onChangeQuery('');\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={handleFilterChange}>\n            <option value={Filter.All}>All</option>\n            <option value={Filter.Active}>Active</option>\n            <option value={Filter.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleSearchChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleDeleteSearch}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectTodo: (todo: Todo | null) => void,\n  selectedTodo: Todo,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectTodo,\n  selectedTodo,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {selectedTodo && `Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => selectTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/FilterBy';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filterBy, setFilterBy] = useState(Filter.All);\n\n  useEffect(() => {\n    getTodos()\n      .then(setVisibleTodos);\n  }, []);\n\n  const filterTodos: Todo[] = useMemo(() => {\n    let filteredToods = [...visibleTodos];\n\n    if (query) {\n      filteredToods = filteredToods.filter(todo => (todo.title.toLowerCase().includes(query.toLowerCase())\n      ));\n    }\n\n    switch (filterBy) {\n      case Filter.Completed:\n        return filteredToods.filter(todo => todo.completed);\n\n      case Filter.Active:\n        return filteredToods.filter(todo => !todo.completed);\n\n      default:\n        return filteredToods;\n    }\n  }, [visibleTodos, query, filterBy]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onChangeFilter={setFilterBy}\n                onChangeQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!visibleTodos.length ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filterTodos}\n                  selectTodo={setSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectTodo={setSelectedTodo}\n          selectedTodo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}